{
    "swagger": "2.0",
    "info": {
        "title": "File storage app",
        "contact": {},
        "version": "0.1"
    },
    "host": "localhost:8080",
    "basePath": "/v1",
    "paths": {
        "/ping": {
            "get": {
                "description": "Returns a simple \"pong\" response to verify the service is running.",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "health"
                ],
                "summary": "Health check",
                "responses": {
                    "200": {
                        "description": "pong",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/v1/folders": {
            "post": {
                "description": "Creates a new folder with the given name and parent folder ID for the authenticated user.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "folder"
                ],
                "summary": "Create a new folder",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Folder creation request payload",
                        "name": "requestData",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.RequestData"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Folder successfully created",
                        "schema": {
                            "$ref": "#/definitions/api.NewFolderResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid request data or folder creation failed",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/folders/{folder_id}": {
            "get": {
                "description": "Retrieves size details of the folder specified by folder ID, similar to the 'du' command, but in JSON format",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "folder"
                ],
                "summary": "Get folder information",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Folder ID",
                        "name": "folder_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Folder size information retrieved successfully",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/api.Size"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid folder_id",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to get folder information",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a specified folder and updates size calculations for all related folders",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "folder"
                ],
                "summary": "Remove a folder",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Folder ID",
                        "name": "folder_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Folder successfully removed"
                    },
                    "400": {
                        "description": "Invalid folder_id",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to remove folder",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/folders/{folder_id}/files": {
            "post": {
                "description": "Uploads a file to S3 storage and saves the file details in the database. It also updates the folder size cache in there is no transaction",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "file"
                ],
                "summary": "Upload a file",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Folder ID",
                        "name": "folder_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "file",
                        "description": "File to upload",
                        "name": "file",
                        "in": "formData",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "File successfully uploaded"
                    },
                    "400": {
                        "description": "Invalid input parameters or file upload failed",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/folders/{folder_id}/files/{file_id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "file"
                ],
                "summary": "Get a file",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Folder ID",
                        "name": "folder_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "File ID",
                        "name": "file_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Invalid file_id",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a file from the specified folder by file ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "file"
                ],
                "summary": "Remove a file",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Folder ID",
                        "name": "folder_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "File ID",
                        "name": "file_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "Invalid folder_id or file_id",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/folders/{folder_id}/files/{file_id}/move": {
            "put": {
                "description": "Moves a specified file to a new folder based on provided folder ID.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "file"
                ],
                "summary": "Move a file",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Folder ID",
                        "name": "folder_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "File ID",
                        "name": "file_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Request payload containing the new folder ID",
                        "name": "moveFile",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.MoveFileRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "File successfully moved"
                    },
                    "400": {
                        "description": "Invalid input parameters",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/folders/{folder_id}/move": {
            "put": {
                "description": "Changes the parent folder of a specified folder and updates the size calculations",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "folder"
                ],
                "summary": "Move a folder",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Folder ID",
                        "name": "folder_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "New parent folder ID",
                        "name": "moveFolder",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/api.MoveFolderRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Folder successfully moved"
                    },
                    "400": {
                        "description": "Invalid folder_id or request body",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/folders/{folder_id}/transaction/start": {
            "post": {
                "description": "Initiates a new transaction for the specified folder",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transaction"
                ],
                "summary": "Start a new transaction",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Folder ID",
                        "name": "folder_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Transaction successfully started",
                        "schema": {
                            "$ref": "#/definitions/api.TransactionStartResponse"
                        }
                    },
                    "400": {
                        "description": "Invalid folder_id",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/folders/{folder_id}/transaction/{transaction_id}/complete": {
            "put": {
                "description": "Completes the specified transaction by updating its status to \"completed\" and updating folder sizes",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transaction"
                ],
                "summary": "Complete a transaction",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Folder ID",
                        "name": "folder_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Transaction ID",
                        "name": "transaction_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Transaction successfully completed"
                    },
                    "400": {
                        "description": "Invalid transaction_id",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "404": {
                        "description": "Transaction not found",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/v1/folders/{folder_id}/transaction/{transaction_id}/stop": {
            "put": {
                "description": "Stops the specified transaction by updating its status to \"failed\"",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "transaction"
                ],
                "summary": "Stop a transaction",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "user_id",
                        "in": "header",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Folder ID",
                        "name": "folder_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "Transaction ID",
                        "name": "transaction_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Transaction successfully stopped"
                    },
                    "400": {
                        "description": "Invalid transaction_id",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    },
                    "500": {
                        "description": "Failed to stop transaction",
                        "schema": {
                            "$ref": "#/definitions/api.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "api.ErrorResponse": {
            "type": "object"
        },
        "api.MoveFileRequest": {
            "type": "object",
            "properties": {
                "new_folder_id": {
                    "type": "integer"
                }
            }
        },
        "api.MoveFolderRequest": {
            "type": "object",
            "properties": {
                "new_folder_id": {
                    "type": "integer"
                }
            }
        },
        "api.NewFolderResponse": {
            "type": "object",
            "properties": {
                "folder_id": {
                    "type": "integer"
                }
            }
        },
        "api.RequestData": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "parent_folder_id": {
                    "type": "integer"
                }
            }
        },
        "api.Size": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "size": {
                    "type": "string"
                }
            }
        },
        "api.TransactionStartResponse": {
            "type": "object",
            "properties": {
                "transaction_id": {
                    "type": "integer"
                }
            }
        }
    },
    "securityDefinitions": {
        "BasicAuth": {
            "type": "basic"
        }
    },
    "externalDocs": {
        "description": "OpenAPI",
        "url": "https://swagger.io/resources/open-api/"
    }
}